/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import careerModels from './careers.glb';
import snuModel from './snu.glb';
import loadcompleteModel from './loadcomplete.glb';
import springcampModel from './springcamp.glb';
import { useLoader } from '@react-three/fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import loadImg from './loadcomplete.png';
import snuImg from './snu.png';
import springcampImg from './springcamp.png';
export default function Model(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF(careerModels);

  const loadcomplete = useLoader(GLTFLoader, loadcompleteModel);
  const snu = useLoader(GLTFLoader, snuModel);
  const springcamp = useLoader(GLTFLoader, springcampModel);

  function onClickLoadcomplete() {
    props.openModal({
      title: 'Loadcomplete',
      body: 'I work for a Game company, Loadcomplete as a NFT TF and data engineer.\nAnd as a army(산업기능요원)',
      url: 'https://loadcomplete.com',
      image: loadImg,
      modeler: 0,
    });
  }
  function onClickSnu() {
    props.openModal({
      title: 'Seoul National University',
      body: '자유전공학부 18학번, 기계공학 컴퓨터공학 전공',
      url: 'https://snu.ac.kr',
      image: snuImg,
      modeler: 0,
    });
  }
  function onClickSpringcamp() {
    props.openModal({
      title: 'Springcamp',
      body: 'I worked for a VC, Springcamp as a Seedseeker',
      url: 'https://springcamp.co',
      image: springcampImg,

      modeler: 0,
    });
  }
  return (
    <group {...props}>
      <primitive
        object={loadcomplete.scene}
        onClick={onClickLoadcomplete}
        scale={0.5}
        position={[0, 0, 3]}
      />
      <primitive
        object={snu.scene}
        scale={0.5}
        position={[1, 0, 3]}
        onClick={onClickSnu}
      />
      <primitive
        object={springcamp.scene}
        position={[4, -3.6, 0]}
        onClick={onClickSpringcamp}
      />
    </group>
  );
}

useGLTF.preload(careerModels);
